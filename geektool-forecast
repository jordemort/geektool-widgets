#!/Users/media/perl5/perlbrew/perls/perl-5.20.0/bin/perl

our $JSON_PATH = '/Users/media/.forecast.json';
our $INTERVAL = 60;
our $API_KEY = 'Insert your forecast.io API key here'
our $URL_TEMPLATE = "https://api.forecast.io/forecast/$API_KEY/%s,%s";
our $LATITUDE = '41.9';
our $LONGITUDE = '-87.7';

use Fcntl qw(:flock :seek);
use File::stat;
use strict;

my %args = map { $_ => 1 } @ARGV;
my $mode = $args{init} ? '>' : '+<';

open(my $json, $mode, $JSON_PATH) or die "Couldn't open JSON: $!";
flock($json, LOCK_EX) or die "Couldn't lock JSON: $!";

if ($args{init} or time() - stat($json)->ctime > $INTERVAL)
{
	require Mojo::UserAgent;
	my $ua = Mojo::UserAgent->new();

	$ua->on('error' => sub {
		my ($self, $err) = @_;
		die "User agent error: $err";
	});

	my $res = $ua->get(sprintf($URL_TEMPLATE, $LATITUDE, $LONGITUDE))->res;

	if ($res->is_empty)
	{
		die "Empty response";
	}
	elsif (not $res->is_status_class(200))
	{
		die sprintf("HTTP %s %s", $res->code, $res->message);
	}
	elsif (not defined($res->json))
	{
		die "Unparsable JSON";
	}

	truncate($json, 0);
	seek($json, 0, SEEK_SET);
	print $json $res->body;
	print $res->body;
}
else
{
	local $/; undef $/;
	print <$json>;
	print "\n";
}

close($json);
exit(0);


